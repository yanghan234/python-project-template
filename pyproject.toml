[project]
name = "python-project-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "loguru>=0.7.3",
]

[project.scripts]
project-template = "python_project_template:main"

[dependency-groups]
dev = [
    "ipython>=9.4.0",
    "jupyter>=1.1.1",
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
]

[build-system]
requires = ["uv_build>=0.8.8,<0.9.0"]
build-backend = "uv_build"

[tool.ruff]
# Set the maximum line length to 88, which is the default for Black.
line-length = 88
# Set the indentation width to 4 spaces.
indent-width = 4
# Exclude common directories that don't need to be linted or formatted.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# A comprehensive set of rules for modern, high-quality Python.
select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT",# flake8-slots
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
    "YTT", # flake8-2020
]

# Ignore rules that are either handled by the formatter or are common to ignore.
# It is strongly recommended NOT to ignore B006 (mutable default arguments).
ignore = [
    "B008", # Do not perform function calls in argument defaults
    "C901", # Function is too complex
    "S603", # Subprocess call - check for execution of untrusted input
    "S607", # Starting a process with a partial executable path
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# In test files, it's okay to use asserts and have more complex functions.
"tests/**/*.py" = ["S101", "C901"]
"__init__.py" = ["F401"]


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with 4 spaces.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["python_project_template"]

